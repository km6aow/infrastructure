---
  - name: Add Docker APT key
    ansible.builtin.get_url:
      url: https://download.docker.com/linux/ubuntu/gpg 
      dest: /etc/apt/keyrings/docker.asc

  - name: Add Docker repository to APT sources
    ansible.builtin.copy:
      dest:     '/etc/apt/sources.list.d/docker.list'
      content:  |
        deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

  - name: Update the APT cache
    ansible.builtin.apt:
      update_cache: true

  - name: "Check if the docker group exists"
    ansible.builtin.getent:
      database: group
      key:      "docker"
      fail_key: false
    register: getent_output

  - debug: var=getent_output

  - name: Set whether not the docker group exists
    ansible.builtin.set_fact:
      docker_group_exists: "{{ ansible_facts.getent_group['docker'] is not none }}"

  - name: Initialize ansible_in_docker_group fact
    ansible.builtin.set_fact:
      ansible_in_docker_group:   false

  - name: Is ansible user in docker group?
    ansible.builtin.set_fact:
      ansible_in_docker_group: "{{ ansible_facts.getent_group['docker']['ansible'] is not none }}"
    when:   docker_group_exists

  - name: Add docker group if needed
    ansible.builtin.group:
      name:     "docker"
      state:    present
    when:       not docker_group_exists

  - name: "Check if the docker user exists"
    ansible.builtin.getent:
      database: passwd
      key:     "docker"
      fail_key: false

  - name: Set whether not the user exists
    ansible.builtin.set_fact:
      docker_user_exists: "{{ ansible_facts.getent_passwd['docker'] is not none }}"

  - name: Add user docker
    ansible.builtin.user:
      name:       "docker"
      comment:    "Docker Account"
      groups:     "docker"
      system:     true
      shell:      "/bin/false"
      createhome: "false"
    when:         not docker_user_exists

  - name: Make sure the ansible user is in the docker group
    ansible.builtin.user:
      name:       "ansible"
      groups:     "docker"
      state:      present
      append:     yes
    when:         not ansible_in_docker_group

  - name: Install Required Packages
    include_role:
      name: provision_packages
    vars:
      packages_to_install:
        - apache2-utils
        - apt-transport-https
        - ca-certificates
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

      services: []
